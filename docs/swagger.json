{
    "swagger": "2.0",
    "info": {
        "description": "User id info",
        "title": "Auth Service",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Timoshenkov Ivan",
            "url": "https://t.me/IvanTimoshenkov",
            "email": "timoshenkovvanya@gmail.com"
        },
        "license": {
            "name": "LICENSE MIT"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1/",
    "paths": {
        "/auth/access/{id}": {
            "get": {
                "description": "Creates new access send refresh token in secured cookie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate access JWT and refresh JWT token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User GUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.AccessTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Checks user access token and returns user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Secured endpoint returns user GUID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.UserIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal.AccessTokenResponse": {
            "description": "Access token info",
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.KMUFsIDTnFmyG3nMiGM6H9FNFUROf3wh7SmqJp-QV30",
                    "type": "string"
                }
            }
        },
        "internal.ErrorResponse": {
            "description": "Error response error",
            "type": "object",
            "properties": {
                "message": {
                    "description": "example: internal server error",
                    "type": "string"
                }
            }
        },
        "internal.UserIdResponse": {
            "description": "User id info",
            "type": "object",
            "properties": {
                "user_id": {
                    "description": "example: 9bb4b3f5-201f-4736-a4bc-f6397dc5a57f",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI"
    }
}